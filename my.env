# Formating
_BOLD='\033[1m'
_END='\033[0m'

# Prompt
PROMPT="[ %~ ] 
> "
export CLICOLOR=1

# Common Vars
export JIRA_LOCAL_DIR="/Users/rafael.zago/Documents/WS/jira/local/jira"
export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home
export MAVEN_HOME="/opt/apache-maven"
export ATLASSIAN_SCRIPTS="/Users/rafael.zago/Documents/WS/jira/atlassian-scripts"
export DUMBO_HOME=/Users/rafael.zago/Documents/WS/tools/dumbo
export JIRA_DOWNLOAD_ENDPOINT="https://www.atlassian.com/software/jira/downloads/binary"
export JIRA_ISSUES="/Users/rafael.zago/Documents/Issues"
export MYSQL_CLIENT="/usr/local/opt/mysql-client/bin"
export RVM_PATH="$HOME/.rvm/bin"
export SSLPoke="/Users/rafael.zago/Documents/WS/tools/SSLPoke.class"
export PYTHON="/Users/rafael.zago/Library/Python/3.8"

#Path
export PATH=$PATH:$JAVA_HOME/bin:$DUMBO_HOME:$MAVEN_HOME/bin:$MYSQL_CLIENT:RVM_PATH:$PYTHON/bin

#Aliases
alias pg="docker run -it --network=docker-jira-common-network --rm rzago/pgcli postgresql://jiradbuser:mestre@pgsql96:5432/postgres"
alias xf="perl -e 'while(<STDIN>) { my \$in; for my \$field (@ARGV) { printf \"\$in\"; my \$sep; while (/(\$field|\$field [^>]*)>([^<]*)<\//g) { print \"\$sep\$field \$2\" if \$2; \$sep=\", \" } \$in=\"|\" } print \"\\n\"}' $@"
alias ll='ls -l'
alias c='clear'
alias ..='cd ..'
alias tf='tail -f'
alias e='subl .'
alias bb='cd ~/bitbucket; ls -l'
alias bbh='cd ~/bitbucket-home; ls -l'
alias cr='cd ~/crowd; ls -l'
alias jira='cd ~/jira; ls -l'
alias jh='cd ~/jira-home; ls -l '
alias cf='cd ~/confluence; ls -l'
alias ch='cd ~/confluence-home; ls -l'
alias cr='cd ~/crowd; ls -l'
alias crh='cd ~/crowd-home; ls -l'
alias ss='cd ~/software; ls -l'
alias sp='cd ~/support'
alias cw='cd ~/crowd; ls -l'
alias cwh='cd ~/crowd-home; ls -l'
alias ws='cd ~/Documents/WS'
alias jgrep='ps -ef | grep -i java | grep -vi grep'
alias gs='git status'
alias gd='git diff'
alias gc='git commit'
alias stmsb='~/msb/start-msb'
alias spmsb='~/msb/stop-msb'

# Atlassian Stuff
source $ATLASSIAN_SCRIPTS/sourceme.sh

# Functions
assh() {
    # Receiving the instance IP
    typeset _IP=$1

    # Connecting...
    ssh -i ~/Documents/AWS/rzago-us-east-1.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ec2-user@$_IP
}
ascp() {
    # Receiving the instance IP
    typeset _IP=$1

    # Connecting...
    ssh -i ~/Documents/AWS/rzago-us-east-1.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ec2-user@$_IP
}
spe(){
    # Receiving parameter
    typeset _ISSUE=$1
    cd ~/support/${_ISSUE}
}
djira() {
    #Download Jira's Versions
    _VERSION=$1
    _TYPE=$2
    _EXTRACT=$3

    #Creating the file name to download
    case $_TYPE in
        tar)
            VERSION_TO_DOWNLOAD=atlassian-jira-software-${_VERSION}.tar.gz
            ;;
        exe)
            VERSION_TO_DOWNLOAD=atlassian-jira-software-${_VERSION}.exe
            break
            ;;
        zip)
            VERSION_TO_DOWNLOAD=atlassian-jira-software-${_VERSION}.zip
            ;;
        bin)
            VERSION_TO_DOWNLOAD=atlassian-jira-software-${_VERSION}.bin
            ;;
        *)
            echo "Wrong extension"
            exit 1
    esac

    # Download the version
    printf "%s\n" "Downloading version ${VERSION_TO_DOWNLOAD}..."

    wget -q  ${JIRA_DOWNLOAD_ENDPOINT}/${VERSION_TO_DOWNLOAD} -O ${JIRA_LOCAL_DIR}/packages/${VERSION_TO_DOWNLOAD}
    # Extracting
    case $_EXTRACT in
        e)
            printf "%s\n" "Extracting version ${VERSION_TO_DOWNLOAD}..."
            tar -zxf ${JIRA_LOCAL_DIR}/packages/${VERSION_TO_DOWNLOAD} -d ${JIRA_LOCAL_DIR}/jirasoftware/
            ;;
    esac
}
spu(){
    # Extracting support Zip files
    mkdir packages
    for _SUPPORT_ZIP in $(ls -1tr *.zip);do 
        printf " Extracting: %s\n" $_SUPPORT_ZIP
        _FOLDER=$(echo $_SUPPORT_ZIP | rev | cut -d'.' -f2- | rev) 
        unzip -qq $_SUPPORT_ZIP -d  $_FOLDER
        mv $_SUPPORT_ZIP packages/ 
        dumbo -x -o -i packages/$_SUPPORT_ZIP
    done
    # Renaming all the log files 
    printf " Renaming all the log files adding .log at the end"
    find . -name '*.log.*' -type f -exec bash -c 'mv $0 $0.log' '{}' \;
}

function show {

    echo "PSE Functions:"
    echo
    printf "$_BOLD spu$_END - Extract and rename support zip)\n"
    printf "$_BOLD xf $_END - Get a XML value for a given tag\n"
    printf "$_BOLD sp $_END - Move to support folders\n"
    printf "$_BOLD pg $_END - Connecting to Postgres using pgcli\n"
    echo
}
